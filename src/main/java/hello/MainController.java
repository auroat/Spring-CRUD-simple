package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class MainController {

    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private UserRepository userRepository;

    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    // Example: $ curl -X POST 'localhost:8080/demo/create?name=Lavron&email=gipsy@cejl.com'
    @RequestMapping(path = "/create", method = RequestMethod.POST)
    public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String email) {

	User n = new User();
	n.setName(name);
	n.setEmail(email);
	userRepository.save(n);
	return "Created \n";
    }

    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    // Example: $ curl -X POST 'localhost:8080/demo/update?id=1&name=Lincoln&email=pres@usa.com'
    @RequestMapping(path = "/update", method = RequestMethod.POST)
    public @ResponseBody String updateUser(@RequestParam Integer id, @RequestParam String email,
	    @RequestParam String name) {
	User n = userRepository.findById(id).get();
	n.setName(name);
	n.setEmail(email);

	// Commit and write to the Database
	userRepository.save(n);

	return "Updated \n";
    }

    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    // Example: $ curl -X DELETE 'localhost:8080/demo/delete?id=1'
    @RequestMapping(path = "/delete", method = RequestMethod.DELETE)
    public @ResponseBody String deleteUser(@RequestParam Integer id) {
	userRepository.deleteById(id);

	return "Deleted the user with ID: " + id + "\n";
    }

    // @ResponseBody means the returned String is the response, not a view name
    // Example: $ curl 'localhost:8080/demo/all' | jq
    @GetMapping(path = "/all") // Map ONLY GET Requests
    public @ResponseBody Iterable<User> getAllUsers() {
	// This returns a JSON or XML with the users
	return userRepository.findAll();
    }
}